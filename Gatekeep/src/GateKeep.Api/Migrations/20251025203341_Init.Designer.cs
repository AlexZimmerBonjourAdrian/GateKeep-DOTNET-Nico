// <auto-generated />
using System;
using GateKeep.Api.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace GateKeep.Api.Migrations
{
    [DbContext(typeof(GateKeepDbContext))]
    [Migration("20251025203341_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("GateKeep.Api.Domain.Entities.Beneficio", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("Cupos")
                        .HasColumnType("integer");

                    b.Property<DateTime>("FechaDeVencimiento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Tipo")
                        .HasColumnType("integer");

                    b.Property<bool>("Vigencia")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("beneficios", (string)null);
                });

            modelBuilder.Entity("GateKeep.Api.Domain.Entities.BeneficioUsuario", b =>
                {
                    b.Property<long>("UsuarioId")
                        .HasColumnType("bigint");

                    b.Property<long>("BeneficioId")
                        .HasColumnType("bigint");

                    b.Property<bool>("EstadoCanje")
                        .HasColumnType("boolean");

                    b.HasKey("UsuarioId", "BeneficioId");

                    b.ToTable("beneficios_usuarios", (string)null);
                });

            modelBuilder.Entity("GateKeep.Api.Domain.Entities.Espacio", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("tipo")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("character varying(13)");

                    b.HasKey("Id");

                    b.ToTable("espacios", (string)null);

                    b.HasDiscriminator<string>("tipo").HasValue("espacio");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("GateKeep.Api.Domain.Entities.EventoAcceso", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("EspacioId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("PuntoControl")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("character varying(120)");

                    b.Property<string>("Resultado")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<long>("UsuarioId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("eventos_acceso", (string)null);
                });

            modelBuilder.Entity("GateKeep.Api.Domain.Entities.Notificacion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("FechaEnvio")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Mensaje")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.HasKey("Id");

                    b.ToTable("notificaciones", (string)null);
                });

            modelBuilder.Entity("GateKeep.Api.Domain.Entities.NotificacionUsuario", b =>
                {
                    b.Property<long>("UsuarioId")
                        .HasColumnType("bigint");

                    b.Property<long>("NotificacionId")
                        .HasColumnType("bigint");

                    b.Property<bool>("Leido")
                        .HasColumnType("boolean");

                    b.HasKey("UsuarioId", "NotificacionId");

                    b.ToTable("notificaciones_usuarios", (string)null);
                });

            modelBuilder.Entity("GateKeep.Api.Domain.Entities.ReglaAcceso", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("EspacioId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("HorarioApertura")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("HorarioCierre")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("RolesPermitidos")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("VigenciaApertura")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("VigenciaCierre")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("reglas_acceso", (string)null);
                });

            modelBuilder.Entity("GateKeep.Api.Domain.Entities.Usuario", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("character varying(120)");

                    b.Property<string>("Contrasenia")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<int>("Credencial")
                        .HasColumnType("integer");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<DateTime>("FechaAlta")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("character varying(120)");

                    b.Property<int>("Rol")
                        .HasColumnType("integer");

                    b.Property<string>("Telefono")
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("usuarios", (string)null);
                });

            modelBuilder.Entity("GateKeep.Api.Domain.Entities.UsuarioEspacio", b =>
                {
                    b.Property<long>("UsuarioId")
                        .HasColumnType("bigint");

                    b.Property<long>("EspacioId")
                        .HasColumnType("bigint");

                    b.HasKey("UsuarioId", "EspacioId");

                    b.ToTable("usuarios_espacios", (string)null);
                });

            modelBuilder.Entity("GateKeep.Api.Domain.Entities.Edificio", b =>
                {
                    b.HasBaseType("GateKeep.Api.Domain.Entities.Espacio");

                    b.HasDiscriminator().HasValue("edificio");
                });

            modelBuilder.Entity("GateKeep.Api.Domain.Entities.Laboratorio", b =>
                {
                    b.HasBaseType("GateKeep.Api.Domain.Entities.Espacio");

                    b.HasDiscriminator().HasValue("laboratorio");
                });

            modelBuilder.Entity("GateKeep.Api.Domain.Entities.Salon", b =>
                {
                    b.HasBaseType("GateKeep.Api.Domain.Entities.Espacio");

                    b.HasDiscriminator().HasValue("salon");
                });
#pragma warning restore 612, 618
        }
    }
}
